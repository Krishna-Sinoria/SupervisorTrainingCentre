import React, { useState } from 'react';
import { Download, CreditCard, User, Train, CheckCircle } from 'lucide-react';
import { useAuth } from '../../context/AuthContext';
import { useData } from '../../context/DataContext';

export default function IDCard() {
  const { user } = useAuth();
  const { getTraineesByTrainer } = useData();
  const [selectedTrainee, setSelectedTrainee] = useState('');
  const [showSuccess, setShowSuccess] = useState(false);

  const myTrainees = getTraineesByTrainer(user?.id || '');
  const selectedTraineeData = myTrainees.find(t => t.id === selectedTrainee);

  const generateIDCard = () => {
    if (!selectedTraineeData) return;

    const htmlContent = `
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; padding: 20px; }
            .id-card {
              width: 350px;
              border: 2px solid #003366;
              padding: 16px;
              border-radius: 10px;
              color: #003366;
              background-color: #f1f5f9;
              position: relative;
              text-align: center;
            }
            .logo {
              width: 80px;
              height: 80px;
              margin: 0 auto 12px;
            }
            .id-card-header {
              font-size: 18px;
              font-weight: bold;
              margin-bottom: 12px;
            }
            .id-card-section {
              text-align: left;
              margin-bottom: 8px;
            }
            .id-card-section span {
              font-weight: bold;
            }
            .footer {
              position: absolute;
              bottom: 10px;
              left: 16px;
              font-size: 10px;
              color: #666;
            }
          </style>
        </head>
        <body>
          <div class="id-card">
            <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/28/Indian_Railways.svg/2048px-Indian_Railways.svg.png" alt="STC Logo" class="logo" />
            <div class="id-card-header">STC LUCKNOW | IDENTITY CARD</div>
            <div class="id-card-section"><span>Name:</span> ${selectedTraineeData.fullName}</div>
            <div class="id-card-section"><span>ID:</span> ${selectedTraineeData.id}</div>
            <div class="id-card-section"><span>Module:</span> ${selectedTraineeData.moduleNumber}</div>
            <div class="id-card-section"><span>Designation:</span> ${selectedTraineeData.designation}</div>
            <div class="id-card-section"><span>Course Duration:</span> ${selectedTraineeData.courseDuration}</div>
            <div class="id-card-section"><span>Email:</span> ${selectedTraineeData.email}</div>
            <div class="id-card-section"><span>Phone:</span> ${selectedTraineeData.phoneNumber}</div>
            <div class="id-card-section"><span>Unit:</span> ${selectedTraineeData.unit}</div>
            <div class="id-card-section"><span>Batch:</span> ${selectedTraineeData.batch}</div>
            <div class="footer">Generated by STC Training System | ${new Date().toLocaleDateString()}</div>
          </div>
        </body>
      </html>
    `;

    const blob = new Blob([htmlContent], { type: 'text/html' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `id_card_${selectedTraineeData.id}.html`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    setShowSuccess(true);
    setTimeout(() => setShowSuccess(false), 3000);
  };

  return (
    <div className="space-y-6">
      {showSuccess && (
        <div className="bg-green-50 border border-green-200 rounded-lg p-4">
          <div className="flex items-center gap-2">
            <CheckCircle className="h-5 w-5 text-green-600" />
            <p className="text-green-800 font-medium">ID Card generated and downloaded successfully!</p>
          </div>
        </div>
      )}

      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4">Generate ID Card</h2>
        <div className="flex items-center gap-4">
          <div className="flex-1">
            <select
              value={selectedTrainee}
              onChange={(e) => setSelectedTrainee(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">Select a trainee...</option>
              {myTrainees.map((trainee) => (
                <option key={trainee.id} value={trainee.id}>
                  {trainee.fullName} - {trainee.id} ({trainee.moduleNumber})
                </option>
              ))}
            </select>
          </div>
          {selectedTraineeData && (
            <button
              onClick={generateIDCard}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2"
            >
              <Download className="h-4 w-4" />
              Generate ID Card
            </button>
          )}
        </div>
      </div>

      {selectedTraineeData && (
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">ID Card Preview</h3>
          <div className="id-card-preview border border-blue-800 rounded-lg p-4 text-blue-900 bg-blue-50 max-w-sm mx-auto text-center">
            <img src="/images/STC logo.png" alt="STC Logo" className="w-20 h-20 mx-auto mb-2" />
            <p className="font-bold">STC LUCKNOW | IDENTITY CARD</p>
            <hr className="my-2" />
            <p><strong>Name:</strong> {selectedTraineeData.fullName}</p>
            <p><strong>ID:</strong> {selectedTraineeData.id}</p>
            <p><strong>Module:</strong> {selectedTraineeData.moduleNumber}</p>
            <p><strong>Designation:</strong> {selectedTraineeData.designation}</p>
            <p><strong>Course Duration:</strong> {selectedTraineeData.courseDuration}</p>
            <p><strong>Email:</strong> {selectedTraineeData.email}</p>
            <p><strong>Phone:</strong> {selectedTraineeData.phoneNumber}</p>
            <p><strong>Unit:</strong> {selectedTraineeData.unit}</p>
            <p><strong>Batch:</strong> {selectedTraineeData.batch}</p>
            <p className="text-xs text-center mt-4">Generated on: {new Date().toLocaleDateString()}</p>
          </div>
        </div>
      )}
    </div>
  );
}
